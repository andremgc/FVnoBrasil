full_join(expand.grid(data_conexao = seq(ymd("2014/01/01"), ymd("2020/01/01"),
by = "month"),
uf = unique (ANEELCEP$uf)))%>%
group_by(uf, mes = ceiling_date(data_conexao, "month")) %>%
mutate_at(vars(potencia_instalada_k_w, unidades_instaladas),
~replace(., is.na(.), 0)) %>%
summarise(potencia_instalada = sum(potencia_instalada_k_w),
unidades_instaladas = n()) %>%
arrange(mes) %>%  group_by(uf) %>%
mutate (potencia_instalada = cumsum(potencia_instalada),
unidades_instaladas = cumsum(unidades_instaladas)) %>%
ungroup() %>%
mutate (uf=fct_reorder(uf,unidades_instaladas,
.fun = max, .desc = T))
DinamicaEstados <- ANEELCEP %>%
filter (tipo =="UFV" & classe == 'Residencial') %>%
# Para garantir a existencia de dadaos para cada mes em cada uf
full_join(expand.grid(data_conexao = seq(ymd("2014/01/01"), ymd("2020/01/01"),
by = "month"),
uf = unique (ANEELCEP$uf)))%>%
group_by(uf, mes = ceiling_date(data_conexao, "month")) %>%
mutate_at(vars(potencia_instalada_k_w),
~replace(., is.na(.), 0)) %>%
summarise(potencia_instalada = sum(potencia_instalada_k_w),
unidades_instaladas = n()) %>%
arrange(mes) %>%  group_by(uf) %>%
mutate (potencia_instalada = cumsum(potencia_instalada),
unidades_instaladas = cumsum(unidades_instaladas)) %>%
ungroup() %>%
mutate (uf=fct_reorder(uf,unidades_instaladas,
.fun = max, .desc = T))
p <- ggplot(DinamicaEstados, aes(x=mes, y=potencia_instalada)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))
p
p <- ggplot(DinamicaClasse, aes(x=mes, y=value)) +
geom_area(aes(fill = classe), position ="fill") +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "Classe", x= 'Ano',
y='Fração do total de unidades instaladas') +
theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_wrap(~key, labeller = labeller(key = key.labs)) +
theme(panel.spacing = unit(2, "lines"))
DinamicaClasse <- ANEELCEP %>%
filter (tipo =="UFV") %>%
# Para garantir a existencia de dadaos para cada mes em cada classe
full_join(expand.grid(data_conexao = seq(ymd("2014/01/01"),ymd("2020/01/01"),
by = "month"),
classe = unique (ANEELCEP$classe)))%>%
group_by(classe, mes = ceiling_date(data_conexao, "month")) %>%
mutate_at(vars(potencia_instalada_kw),
~replace(., is.na(.), 0))
DinamicaClasse <- ANEELCEP %>%
filter (tipo =="UFV") %>%
# Para garantir a existencia de dadaos para cada mes em cada classe
full_join(expand.grid(data_conexao = seq(ymd("2014/01/01"),ymd("2020/01/01"),
by = "month"),
classe = unique (ANEELCEP$classe)))%>%
group_by(classe, mes = ceiling_date(data_conexao, "month")) %>%
mutate_at(vars(potencia_instalada_kw),
~replace(., is.na(.), 0)) %>%
summarise(potencia_instalada = sum(potencia_instalada_k_w),
unidades_instaladas = n()) %>%
arrange(mes) %>%  group_by(classe) %>%
mutate (potencia_instalada = cumsum(potencia_instalada),
unidades_instaladas = cumsum(unidades_instaladas)) %>%
ungroup() %>%
mutate (classe=fct_reorder(classe,unidades_instaladas,
.fun = max, .desc = T)) %>%
gather("key", "value", unidades_instaladas, potencia_instalada)
DinamicaClasse <- ANEELCEP %>%
filter (tipo =="UFV") %>%
# Para garantir a existencia de dadaos para cada mes em cada classe
full_join(expand.grid(data_conexao = seq(ymd("2014/01/01"),ymd("2020/01/01"),
by = "month"),
classe = unique (ANEELCEP$classe)))%>%
group_by(classe, mes = ceiling_date(data_conexao, "month")) %>%
mutate_at(vars(potencia_instalada_kw),
~replace(., is.na(.), 0)) %>%
summarise(potencia_instalada = sum(potencia_instalada_k_w),
unidades_instaladas = n())
DinamicaClasse <- ANEELCEP %>%
filter (tipo =="UFV") %>%
# Para garantir a existencia de dadaos para cada mes em cada classe
full_join(expand.grid(data_conexao = seq(ymd("2014/01/01"),ymd("2020/01/01"),
by = "month"),
classe = unique (ANEELCEP$classe)))%>%
group_by(classe, mes = ceiling_date(data_conexao, "month")) %>%
mutate_at(vars(potencia_instalada_k_w),
~replace(., is.na(.), 0)) %>%
summarise(potencia_instalada = sum(potencia_instalada_k_w),
unidades_instaladas = n()) %>%
arrange(mes) %>%  group_by(classe) %>%
mutate (potencia_instalada = cumsum(potencia_instalada),
unidades_instaladas = cumsum(unidades_instaladas)) %>%
ungroup() %>%
mutate (classe=fct_reorder(classe,unidades_instaladas,
.fun = max, .desc = T)) %>%
gather("key", "value", unidades_instaladas, potencia_instalada)
key.labs <- c("Potência Instalada", "Unidades Instaladas")
names(key.labs) <- c("potencia_instalada", "unidades_instaladas")
p <- ggplot(DinamicaClasse, aes(x=mes, y=value)) +
geom_area(aes(fill = classe), position ="fill") +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "Classe", x= 'Ano',
y='Fração do total de unidades instaladas') +
theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_wrap(~key, labeller = labeller(key = key.labs)) +
theme(panel.spacing = unit(2, "lines"))
p
ggplotly(p)
p <- ggplot(DinamicaEstados, aes(x=mes, y=key)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_wrap(~key, labeller = labeller(key = key.labs)) +
theme(panel.spacing = unit(2, "lines"))
p
DinamicaEstados <- ANEELCEP %>%
filter (tipo =="UFV" & classe == 'Residencial') %>%
# Para garantir a existencia de dadaos para cada mes em cada uf
full_join(expand.grid(data_conexao = seq(ymd("2014/01/01"), ymd("2020/01/01"),
by = "month"),
uf = unique (ANEELCEP$uf)))%>%
group_by(uf, mes = ceiling_date(data_conexao, "month")) %>%
mutate_at(vars(potencia_instalada_k_w),
~replace(., is.na(.), 0)) %>%
summarise(potencia_instalada = sum(potencia_instalada_k_w),
unidades_instaladas = n()) %>%
arrange(mes) %>%  group_by(uf) %>%
mutate (potencia_instalada = cumsum(potencia_instalada),
unidades_instaladas = cumsum(unidades_instaladas)) %>%
ungroup() %>%
mutate (uf=fct_reorder(uf,unidades_instaladas,
.fun = max, .desc = T)) %>%
gather("key", "value", unidades_instaladas, potencia_instalada)
p <- ggplot(DinamicaEstados, aes(x=mes, y=key)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_wrap(~key, labeller = labeller(key = key.labs)) +
theme(panel.spacing = unit(2, "lines"))
p
p <- ggplot(DinamicaEstados, aes(x=mes, y=key)) +
geom_line(aes(color = uf)) +
#scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
#                                           ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
theme_classic() +
#scale_y_continuous(expand = c(0.0,0)) +
facet_wrap(~key, labeller = labeller(key = key.labs)) +
theme(panel.spacing = unit(2, "lines"))
p
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
#scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
#                                           ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
theme_classic() +
#scale_y_continuous(expand = c(0.0,0)) +
facet_wrap(~key, labeller = labeller(key = key.labs)) +
theme(panel.spacing = unit(2, "lines"))
p
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_wrap(~key, labeller = labeller(key = key.labs)) +
theme(panel.spacing = unit(2, "lines"))
ggplotly(p)
DinamicaEstados <- ANEELCEP %>%
filter (tipo =="UFV" & classe == 'Residencial') %>%
# Para garantir a existencia de dadaos para cada mes em cada uf
full_join(expand.grid(data_conexao = seq(ymd("2014/01/01"), ymd("2020/01/01"),
by = "month"),
uf = unique (ANEELCEP$uf)))%>%
group_by(uf, mes = ceiling_date(data_conexao, "month")) %>%
mutate_at(vars(potencia_instalada_k_w),
~replace(., is.na(.), 0)) %>%
summarise(potencia_instalada = sum(potencia_instalada_k_w),
unidades_instaladas = n()) %>%
arrange(mes) %>%  group_by(uf) %>%
mutate (potencia_instalada = cumsum(potencia_instalada),
unidades_instaladas = cumsum(unidades_instaladas)) %>%
ungroup() %>%
mutate (uf=fct_reorder(uf,potencia_instalada,
.fun = max, .desc = T)) %>%
gather("key", "value", unidades_instaladas, potencia_instalada)
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_wrap(~key, labeller = labeller(key = key.labs)) +
theme(panel.spacing = unit(2, "lines"))
ggplotly(p)
(p)
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_wrap(~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines"))
(p)
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
#      theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_wrap(~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines"))
ggplotly(p)
ggplotly(p)
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
#      theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free") +
#theme(panel.spacing = unit(2, "lines"))
ggplotly(p)
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
#      theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free")
ggplotly(p)
theme(panel.spacing = unit(2, "lines"))
ggplotly(p)
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
#      theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines"))
ggplotly(p)
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
#      theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines")) +
theme(plot.margin= margin(b=.2,l=.2,t=.5,r=.5, unit = 'cm'))
ggplotly(p)
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
#      theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines")) +
theme(plot.margin= margin(b=.2,l=1,t=.5,r=.5, unit = 'cm'))
ggplotly(p)
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
#      theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines")) +
opts(axis.title.y = theme_text(hjust=-0.5))
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
#      theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines")) +
theme(axis.title.y = element_text(hjust=-0.5))
ggplotly(p)
p
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
#      theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines")) +
theme(axis.title.y = element_text(vjust=-0.5))
p
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
#      theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines")) +
theme(axis.title.y = element_text(vjust=0.5))
p
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
#      theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines")) +
theme(axis.title.y = element_text(vjust=1))
p
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
#      theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines")) +
theme(axis.title.y = element_text(vjust=5))
p
ggplotly(p)
gp <- ggplotly(p)
str(gp[['x']][['layout']][['annotations']])
gp[['x']][['layout']][['annotations']][[2]][['x']]
gp[['x']][['layout']][['annotations']][[2]][['x']] <- -.1
gp
gp[['x']][['layout']][['annotations']][[2]][['x']] <- -.5
gp[['x']][['layout']][['annotations']][[2]][['x']] <- -.05
gp
gp[['x']][['layout']][['annotations']][[2]][['x']] <- -.08
gp
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
#      theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines")) +
#  theme(axis.title.y = element_text(vjust=5))
p
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
#      theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines"))
gp <- ggplotly(p)
gp[['x']][['layout']][['annotations']][[2]][['x']] <- -.08
gp
gp[['x']][['layout']][['annotations']][[1]][['y']]
gp[['x']][['layout']][['annotations']][[1]][['y']] <- -.05
gp
gp
DinamicaEstados <- ANEELCEP %>%
filter (tipo =="UFV" & classe == 'Residencial') %>%
# Para garantir a existencia de dadaos para cada mes em cada uf
full_join(expand.grid(data_conexao = seq(ymd("2014/01/01"), ymd("2020/01/01"),
by = "month"),
uf = unique (ANEELCEP$uf)))%>%
group_by(uf, mes = ceiling_date(data_conexao, "month")) %>%
mutate_at(vars(potencia_instalada_k_w),
~replace(., is.na(.), 0)) %>%
summarise(potencia_instalada = sum(potencia_instalada_k_w),
unidades_instaladas = n()) %>%
arrange(mes) %>%  group_by(uf) %>%
mutate (potencia_instalada = cumsum(potencia_instalada)/1000,
unidades_instaladas = cumsum(unidades_instaladas)) %>%
ungroup() %>%
mutate (uf=fct_reorder(uf,potencia_instalada,
.fun = max, .desc = T)) #%>%
?facet_grid
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines"))
p
DinamicaEstados <- ANEELCEP %>%
filter (tipo =="UFV" & classe == 'Residencial') %>%
# Para garantir a existencia de dadaos para cada mes em cada uf
full_join(expand.grid(data_conexao = seq(ymd("2014/01/01"), ymd("2020/01/01"),
by = "month"),
uf = unique (ANEELCEP$uf)))%>%
group_by(uf, mes = ceiling_date(data_conexao, "month")) %>%
mutate_at(vars(potencia_instalada_k_w),
~replace(., is.na(.), 0)) %>%
summarise(potencia_instalada = sum(potencia_instalada_k_w),
unidades_instaladas = n()) %>%
arrange(mes) %>%  group_by(uf) %>%
mutate (potencia_instalada = cumsum(potencia_instalada)/1000,
unidades_instaladas = cumsum(unidades_instaladas)) %>%
ungroup() %>%
mutate (uf=fct_reorder(uf,potencia_instalada,
.fun = max, .desc = T)) %>%
gather("key", "value", unidades_instaladas, potencia_instalada)
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines"))
p
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
# theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_grid(.~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines"))
gp <- ggplotly(p)
p
p <- ggplot(DinamicaEstados, aes(x=mes, y=value)) +
geom_line(aes(color = uf)) +
scale_x_date(expand = c(0,0), limits = c(ymd('2016-01-01'),
ymd('2020-01-01')))+
labs (fill = "UF", x= 'Ano',
y='Fração do total de unidades instaladas') +
# theme_classic() +
scale_y_continuous(expand = c(0.0,0)) +
facet_wrap(~key, labeller = labeller(key = key.labs),
scales = "free") +
theme(panel.spacing = unit(2, "lines"))
p
